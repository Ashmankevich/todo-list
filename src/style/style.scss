@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@700&family=Raleway&display=swap");
@import 'mixin';
@import 'color';

*::before,
*::after {
  box-sizing: border-box;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: "Raleway", sans-serif;
  outline: none;
}

body {
  background-color: $backgroundBody;
  height:2500px;
}

.container {
  max-width: 800px;
  padding: 0 15px;
  margin: 0 auto;
}

.row {
  background-color: $backgroundMainPlate;
  border-radius: 15px;
}

.wrapper {
  display: flex;
  justify-content: space-between;
}

.btn {
  @include Btn();
}

.delete-all,
.delete-last {
  max-width: 125px;
  width: 100%;
  background-color: $btnNormalDelete;
  &:hover {
   background-color: $btnHoverDelete;
  }
  &:focus{
   background-color: $btnFocusDelete;
  }
  &:active {
   background-color: $btnActiveDelete;
  }
  @media (max-width: 767px) {
    max-width: 85px;
    width: 100%;
  }
}

.add {
  flex: 0 1 15%;
  background-color: $btnNormalAdd;
  &:hover {
    background-color: $btnHoverAdd;
  }
  &:focus {
   background-color: $btnFocusAdd;
  }
  &:active {
    background-color: $btnActiveAdd;
    box-shadow: 4px 4px 30px 0px $btnActiveAdd;
  }
}

.hide-completed,
.show-completed {
  max-width: 80px;
  width: 100%;
  background-color: $btnNormalShowHide;
  &:hover{
   background-color: $btnHoverShowHide;
  }
  &:focus {
   background-color: $bntFocusShowHide;
  }
  &:active{
   background-color: $btnActiveShowHide;
  }
}

.delete-all,
.delete-last,
.add,
.show-completed,
.all-count {
  margin: 0 15px;
  @media (max-width: 792px) {
    font-size: 16px;
    margin: 0 10px;
  }
  @media (max-width: 767px) {
    font-size: 14px;
  }
}

@media (max-width: 767px) {
  .btn.delete-last {
    display: none;
  }
  .show-completed {
   margin: 0;
 }
}

.hide-completed {
  margin-right: 15px;
  @media (max-width: 767px) {
    margin: 0 10px;
    font-size: 14px;
  }
}

.add[disabled],
.delete-last[disabled],
.delete-all[disabled],
.hide-completed[disabled],
.show-completed[disabled],
.input-search-todo[disabled] {
  color: $inputSearch;
  background: $backgroundInputSearch;
  cursor: not-allowed;
}

.input-search-todo[disabled]::placeholder {
  color: $btnText;
}

.main-items {
  padding-top: 18px;
  margin: 60px 0 18px 0;
  @media (max-width: 767px) {
    margin: 20px 0 18px 0;
  }
}

.input-enter-todo,
.input-search-todo {
  width: 100%;
  @include Input();
  @media (max-width: 767px) {
    margin: 0;
  }
}

@media (max-width: 767px) {
  .input-search-todo {
    margin: 0 10px;
  }
}

.addition-items {
  padding-bottom: 25px;
  margin-bottom: 25px;
}

.all-count,
.completed {
  display: flex;
  align-self: center;
  @media (max-width: 767px) {
    display: none;
  }
}

.all-count {
  max-width: 50px;
  width: 100%;
}

.completed {
  max-width: 120px;
  width: 100%;
  margin-right: 30px;
}

.text-count-name,
.text-all-count,
.text-completed-name,
.text-all-completed {
  color: $btnText;
  font-size: 18px;
}

.text-all-count,
.text-all-completed {
  margin-left: 10px;
}

@keyframes go-left {
  from {
    right: 0px;
  }
  to {
    right: calc(100% - 50px);
  }
}

.animation {
  animation: go-left 1s 1;
}

.todo-item {
  position: relative;
  max-width: 500px;
  width: 100%;
  margin: 10px auto;
  border-radius: 15px;
  padding: 30px;
  background-color: $itemRegular;
  color: $text;
  @media (max-width: 767px) {
    padding: 30px 30px 30px 15px;
  }
}

.item-complete {
  background-color: $itemComplete;
}

.text-complete {
  text-decoration: line-through;
  text-decoration-thickness: 2px;
}

.list-todo {
  flex-direction: column;
}

.todo-date {
  font-size: 14px;
  padding-top: 20px;
  color:$itemDate;
  @media (max-width: 767px) {
    display: none;
  }
}

.todo-close {
  flex-direction: column;
  position: relative;
}

.btn-close {
  position: absolute;
  right: 0px;
  top: -23px;
  width: 32px;
  height: 32px;
  cursor: pointer;
}

.btn-close.alert {
   top:-45px;
   left: 280px;
   @media (max-width: 460px) {
      top: -40px;
      left: 225px;
    }
}

.btn-close:before,
.btn-close:after {
  position: absolute;
  left: 15px;
  content: " ";
  height: 33px;
  width: 2px;
  background-color: $btnCloseItem;
}

.btn-close:before {
  transform: rotate(45deg);
}

.btn-close:after {
  transform: rotate(-45deg);
}

.task-desc {
  word-break: break-word;
}

#confirm-wrap,
#alert-wrap {
  display: inline-block;
  padding: 60px;
  width: 400px;
  border-radius: 30px;
  background: $modalWindow;
  vertical-align: middle;
  @media (max-width: 460px) {
    padding: 30px;
    width: 300px;
  }
}

#alert-wrap {
   padding-bottom: 20px;
   @media (max-width: 460px) {
      padding:50px 20px 10px;
    }
}

#confirm-message,
#alert-message {
  font-size: 25px;
  color: $text;
  margin-bottom: 40px;
  @media (max-width: 460px) {
    font-size: 20px;
  }
}

#confirm-wrap-container,
#alert-wrap-container {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2;
  display: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

#confirm-wrap-container:before,
#alert-wrap-container:before {
  display: inline-block;
  height: 100%;
  content: "";
  vertical-align: middle;
}

#cover-div {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
  width: 100%;
  height: 100%;
  background-color: $coverOverlay;
  backdrop-filter: blur(3px);
}

.button-ok,
.button-cancel {
  border: none;
  max-width: 100px;
  width: 100%;
  padding: 10px;
  border-radius: 10px;
  font-size: 18px;
  color: $text;
  background-color: $btnOkCancel;
  &:hover {
    cursor: pointer;
    background-color: $btnOkCancelHover;
  }
  &:active {
    box-shadow: 0px 0px 10px 0px $btnOkCancelActive inset;
    background-color: $btnOkCancelActive;
  }
}

.button-ok {
  margin-right: 10px;
}

.button-cancel {
  margin-left: 10px;
}

.custom-checkbox {
  max-width: 285px;
  margin-right: 15px;
  @media (max-width: 767px) {
    margin-right: 40px;
  }
}

.custom-checkbox > input {
  position: absolute;
  z-index: -1;
  opacity: 0;
}

.custom-checkbox > span {
  display: inline-flex;
  align-items: center;
  user-select: none;
}

.custom-checkbox > span::before {
  content: "";
  display: inline-block;
  width: 1.25em;
  height: 1.25em;
  flex-shrink: 0;
  flex-grow: 0;
  border: 1px solid $checkboxBorder;
  border-radius: 0.25em;
  margin-right: 1.5em;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: 50% 50%;
  @media (max-width: 767px) {
    margin-right: 1em;
  }
}

.custom-checkbox > input:not(:disabled):not(:checked) + span:hover::before {
  border-color: $checkboxActiveHover;
}

.custom-checkbox > input:not(:disabled):active + span::before {
  background-color: $checkboxActiveHover;
  border-color: $checkboxActiveHover;
}

.custom-checkbox > input:focus + span::before {
  box-shadow: 0 0 0 0.2rem $checkboxFocus;
}

.custom-checkbox > input:focus:not(:checked) + span::before {
  border-color: $btnOkCancelHover;
}

.custom-checkbox > input:checked + span::before {
  border-color: $checkboxChecked;
  background-color: $checkboxChecked;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
}

.custom-checkbox > input:disabled + span::before {
  background-color: $backgroundInputFocus;
}
